#pragma kernel Pixelize

RWTexture2D<float4> Result;

int _BlockSize;
int _ResultWidth;
int _ResultHeight;

[numthreads(8,8,1)]
void Pixelize (uint3 id : SV_DispatchThreadID)
{
    if (id.x >= _ResultWidth || id.y >= _ResultHeight) return;

    int numPixels = 0;
    
    const float2 p0 = id.xy * _BlockSize;
    float4 color = float4(0, 0, 0, 0);

    for (int i = 0; i < _BlockSize * _BlockSize; ++i)
    {
        float2 pixel = p0 + float2(i % _BlockSize, i / _BlockSize);
        if (pixel.x < _ResultWidth && pixel.y < _ResultHeight)
        {
            color += Result[pixel];
            ++numPixels;
        }
    }
    color /= numPixels;

    for (int i = 0; i < _BlockSize * _BlockSize; ++i)
    {
        float2 pixel = p0 + float2(i % _BlockSize, i / _BlockSize);
        if (pixel.x < _ResultWidth && pixel.y < _ResultHeight)
        {
            Result[pixel] = color;
        }
    }
}