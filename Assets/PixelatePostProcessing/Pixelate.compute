#pragma kernel Pixelate

RWTexture2D<float4> Result;

int _BlockSize;
int _ResultWidth;
int _ResultHeight;

[numthreads(8,8,1)]
void Pixelate (uint3 id : SV_DispatchThreadID)
{
    if (id.x >= _ResultWidth || id.y >= _ResultHeight)
        return;

    const float2 p0 = id.xy * _BlockSize;
    
    if (p0.x >= _ResultWidth || p0.y >= _ResultHeight)
        return;
    
    const int blockWidth = min(_BlockSize, _ResultWidth - p0.x);
    const int blockHeight = min(_BlockSize, _ResultHeight - p0.y);
    const int numPixels = blockHeight * blockWidth;
    
    float4 color = float4(0, 0, 0, 0);
    for (int i = 0; i < blockWidth; ++i)
    {
        for (int j = 0; j < blockHeight; ++j)
        {
            const uint2 pixelPos = uint2(p0.x + i, p0.y + j);
            color += Result[pixelPos];
        }
    }
    color /= numPixels;

    for (int i = 0; i < blockWidth; ++i)
    {
        for (int j = 0; j < blockHeight; ++j)
        {
            const uint2 pixelPos = uint2(p0.x + i, p0.y + j);
            Result[pixelPos] = color;
        }
    }
}